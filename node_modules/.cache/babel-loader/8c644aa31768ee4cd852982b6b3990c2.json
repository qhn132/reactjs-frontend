{"ast":null,"code":"var _jsxFileName = \"/home/qhn132/Documents/reactjs/we15304/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm';\nimport ProductAPI from './api/productAPI';\nimport Routers from './Routers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    // call API\n    const getProducts = async () => {\n      try {\n        const {\n          data: products\n        } = await ProductAPI.getAll();\n        setProducts(products);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getProducts();\n  }, []); //add\n\n  const onHandleAdd = todo => {\n    setProducts([...products, {\n      id: 4,\n      name: todo\n    }]);\n  }; // delete\n\n\n  const onHandleDelete = id => {\n    const newproducts = products.filter(item => item._id !== id);\n    setProducts(newproducts);\n  }; // \n\n\n  const [color, setColor] = useState('yellow');\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Routers, {\n      products: products,\n      onDelete: onHandleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ML4/z0V4Roc2ZFrKeSmsWJ7Cay0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/qhn132/Documents/reactjs/we15304/src/App.js"],"names":["React","useState","useEffect","TodoList","TodoForm","ProductAPI","Routers","App","products","setProducts","getProducts","data","getAll","error","console","log","onHandleAdd","todo","id","name","onHandleDelete","newproducts","filter","item","_id","color","setColor","count","setCount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMQ,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAM;AAAEC,UAAAA,IAAI,EAAEH;AAAR,YAAqB,MAAMH,UAAU,CAACO,MAAX,EAAjC;AACAH,QAAAA,WAAW,CAACD,QAAD,CAAX;AACD,OAHD,CAGE,OAAOK,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KAPD;;AAQAH,IAAAA,WAAW;AACZ,GAXQ,EAWN,EAXM,CAAT,CALa,CAiBb;;AACA,QAAMM,WAAW,GAAIC,IAAD,IAAU;AAC5BR,IAAAA,WAAW,CAAC,CACV,GAAGD,QADO,EAEV;AAAEU,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAEF;AAAf,KAFU,CAAD,CAAX;AAID,GALD,CAlBa,CAwBb;;;AACA,QAAMG,cAAc,GAAIF,EAAD,IAAQ;AAC7B,UAAMG,WAAW,GAAGb,QAAQ,CAACc,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaN,EAArC,CAApB;AACAT,IAAAA,WAAW,CAACY,WAAD,CAAX;AAED,GAJD,CAzBa,CA8Bb;;;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,QAAD,CAAlC;AACA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,CAAD,CAAlC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEO,QAAnB;AAA6B,MAAA,QAAQ,EAAEY;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GApDQb,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TodoList from './components/TodoList'\nimport TodoForm from './components/TodoForm';\nimport ProductAPI from './api/productAPI'\nimport Routers from './Routers';\n\nfunction App() {\n  const [products, setProducts] = useState([\n   \n  ])\n\n  useEffect(() => {\n    // call API\n    const getProducts = async () => {\n      try {\n        const { data: products } = await ProductAPI.getAll();\n        setProducts(products)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    getProducts();\n  }, []);\n  //add\n  const onHandleAdd = (todo) => {\n    setProducts([\n      ...products,\n      { id: 4, name: todo }\n    ])\n  }\n  // delete\n  const onHandleDelete = (id) => {\n    const newproducts = products.filter(item => item._id !== id);\n    setProducts(newproducts)\n    \n  }\n  // \n  const [color, setColor] = useState('yellow')\n  const [count, setCount] = useState(0);\n\n  return (\n    <div className=\"container\">\n      <Routers products={products} onDelete={onHandleDelete} />\n      {/* <div>\n        <p>You clicked {count} times</p>\n        <button onClick={() => setCount(count + 1)}>\n          Click me\n      </button>\n      </div>\n\n      <div style={{ background: color, width: \"500px\", height: \"100px\" }}>\n      </div>\n      <TodoForm onAdd={onHandleAdd} />\n      <TodoList data={products} onDelete={onHandleDelete} />\n\n      <button onClick={() => setColor('red')} className=\"btn btn-info btn-sm\">change color</button> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}