{"ast":null,"code":"import { API } from '../config';\nexport const signUp = user => {\n  return fetch(`${API}/signup`, {\n    method: 'POST',\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(response => response.json()).catch(error => console.log(error));\n};\nexport const signIn = user => {\n  return fetch(`${API}/signin`, {\n    method: 'POST',\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(response => response.json()).catch(error => console.log(error));\n};\nexport const authenticate = (data, next) => {\n  if (typeof window !== 'undefined') {\n    localStorage.setItem('user', JSON.stringify(data));\n    next();\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == \"undefined\") {\n    return false;\n  }\n\n  if (localStorage.getItem('user')) {\n    return JSON.parse(localStorage.getItem('user'));\n  } else {\n    return false;\n  }\n};\nexport const ParseRequestUrl = () => {\n  const url = window.location.hash.toLocaleLowerCase();\n  const request = url.split(\"/\");\n  return {\n    resource: request[1],\n    resource: request[2],\n    resource: request[3],\n    id: request[4]\n  };\n};\n_c = ParseRequestUrl;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParseRequestUrl\");","map":{"version":3,"sources":["/home/qhn132/Documents/reactjs/mern-ecommerce-fe/src/auth/index.js"],"names":["API","signUp","user","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","console","log","signIn","authenticate","data","next","window","localStorage","setItem","isAuthenticated","getItem","parse","ParseRequestUrl","url","location","hash","toLocaleLowerCase","request","split","resource","id"],"mappings":"AAAA,SAASA,GAAT,QAAoB,WAApB;AACA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU;AAC5B,SAAOC,KAAK,CAAE,GAAEH,GAAI,SAAR,EAAkB;AAC1BI,IAAAA,MAAM,EAAE,MADkB;AAE1BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFiB;AAK1BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALoB,GAAlB,CAAL,CAOFO,IAPE,CAOGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPf,EAQFC,KARE,CAQIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARb,CAAP;AASH,CAVM;AAWP,OAAO,MAAMG,MAAM,GAAId,IAAD,IAAU;AAC5B,SAAOC,KAAK,CAAE,GAAEH,GAAI,SAAR,EAAkB;AAC1BI,IAAAA,MAAM,EAAE,MADkB;AAE1BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFiB;AAK1BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALoB,GAAlB,CAAL,CAOFO,IAPE,CAOGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPf,EAQFC,KARE,CAQIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARb,CAAP;AASH,CAVM;AAWP,OAAO,MAAMI,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACxC,MAAG,OAAOC,MAAP,KAAkB,WAArB,EAAiC;AAC7BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACC,SAAL,CAAeU,IAAf,CAA7B;AACAC,IAAAA,IAAI;AACP;AACJ,CALM;AAMP,OAAO,MAAMI,eAAe,GAAG,MAAM;AACjC,MAAI,OAAOH,MAAP,IAAiB,WAArB,EAAkC;AAC9B,WAAO,KAAP;AACH;;AACD,MAAIC,YAAY,CAACG,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAC9B,WAAOjB,IAAI,CAACkB,KAAL,CAAWJ,YAAY,CAACG,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAP;AACH;AACJ,CATM;AAUP,OAAO,MAAME,eAAe,GAAG,MAAM;AACjC,QAAMC,GAAG,GAAGP,MAAM,CAACQ,QAAP,CAAgBC,IAAhB,CAAqBC,iBAArB,EAAZ;AACA,QAAMC,OAAO,GAAGJ,GAAG,CAACK,KAAJ,CAAU,GAAV,CAAhB;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAEF,OAAO,CAAC,CAAD,CADd;AAEHE,IAAAA,QAAQ,EAAEF,OAAO,CAAC,CAAD,CAFd;AAGHE,IAAAA,QAAQ,EAAEF,OAAO,CAAC,CAAD,CAHd;AAIHG,IAAAA,EAAE,EAAEH,OAAO,CAAC,CAAD;AAJR,GAAP;AAMH,CATM;KAAML,e","sourcesContent":["import { API } from '../config';\r\nexport const signUp = (user) => {\r\n    return fetch(`${API}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error))\r\n}\r\nexport const signIn = (user) => {\r\n    return fetch(`${API}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error))\r\n}\r\nexport const authenticate = (data, next) => {\r\n    if(typeof window !== 'undefined'){\r\n        localStorage.setItem('user', JSON.stringify(data))\r\n        next();\r\n    }\r\n}\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == \"undefined\") {\r\n        return false\r\n    }\r\n    if (localStorage.getItem('user')) {\r\n        return JSON.parse(localStorage.getItem('user'))\r\n    } else {\r\n        return false\r\n    }\r\n}\r\nexport const ParseRequestUrl = () => {\r\n    const url = window.location.hash.toLocaleLowerCase();\r\n    const request = url.split(\"/\")\r\n    return {\r\n        resource: request[1],\r\n        resource: request[2],\r\n        resource: request[3],\r\n        id: request[4]\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}